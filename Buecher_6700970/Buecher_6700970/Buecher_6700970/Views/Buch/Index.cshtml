@using BuchDatenbank
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
<!-- Title wird im Reiter des Browsers mit angezeigt -->
@{
    ViewData["Title"] = "Listen";
}
<!-- View der beiden Bücher-Tabellen -->
@model BuecherListeModel

<!-- 
    style-Attribut der table sorgt für die Darstellung beider Tabellen nebeneinander 
    wobei die obere Tabelle rechts auf der Website zu sehen ist
-->
<table class="table table-hover mb-0" style="float:right;width:40%;">
   

<!-- 
    View für die Auflistung der Archivierten Bücher 
    erstellt die Tabelle wie sie auf der Website angezeigt werden soll
-->
   <thead>
        <tr><td>Archivierte Bücher</td><td></td></tr>
        <tr>
            <td>Titel</td>
            <td>Autor</td>
            <td>Verschieben</td>
        </tr>
    </thead>
    <tbody>
        <!-- 
            Liest die Daten aus der Liste "Archiviert" aus um sie auf der Site anzuzeigen
            über den Link wird die Methode "Verschieben" aufgerufen, hier wird ein Buch
            von Archiv in Aktuell verschoben und die Listen danach automatisch aktualisiert
        -->
        @foreach (var buch in Model.Archiviert)
        {
            <tr>                  
                <td>@buch.title</td>
                <td>@buch.author</td>
                <td>@Html.ActionLink("Verschieben", "VerschiebeNachAktuell", "Buch", buch)</td>
            </tr>            
        }
    </tbody>
</table>

<table class="table table-hover mb-0" style="width:40%;">

<!-- View für die Auflistung der Archivierten Bücher -->
    <thead>
        <tr><td>Aktuelle Bücher</td><td></td></tr>
        <tr>
            <td>Titel</td>
            <td>Autor</td>
            <td>Verschieben</td>
        </tr>
    </thead>
    <tbody>
        <!--
            Liest die Daten aus der Liste "Aktive" aus um sie auf der Site anzuzeigen
            über den Link wird die Methode "Verschieben" aufgerufen, hier wird ein Buch
            von Aktuell in Archiv verschoben und die Listen danach automatisch aktualisiert
        -->
        @foreach (var buch in Model.Aktive)
        {
            <tr>
                <td>@buch.title</td>
                <td>@buch.author</td>
                <td>@Html.ActionLink("Verschieben", "VerschiebeNachArchiviert", "Buch", buch)</td>
            </tr>
        }
    </tbody>
</table> 

